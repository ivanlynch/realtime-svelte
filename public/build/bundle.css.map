{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import ApolloClient from \"apollo-client\";\n  import gql from \"graphql-tag\";\n  import { InMemoryCache } from \"apollo-cache-inmemory\";\n  import { split } from \"apollo-link\";\n  import { HttpLink } from \"apollo-link-http\";\n  import { WebSocketLink } from \"apollo-link-ws\";\n  import { getMainDefinition } from \"apollo-utilities\";\n  import { subscribe } from \"svelte-apollo\";\n\n  const wsLink = new WebSocketLink({\n    uri: `ws://localhost:8080/v1/graphql`,\n    options: {\n      reconnect: true\n    }\n  });\n\n  // Create an http link:\n  const httpLink = new HttpLink({\n    uri: `http://localhost:8080/v1/graphql`\n  });\n\n  const link = split(\n    // split based on operation type\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === \"OperationDefinition\" &&\n        definition.operation === \"subscription\"\n      );\n    },\n    wsLink,\n    httpLink\n  );\n\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache()\n  });\n  const CURSOS = gql`\n    subscription Cursos {\n      cursos {\n        nombre\n        descripcion\n      }\n    }\n  `;\n\n  const cursosList = subscribe(client, { query: CURSOS });\n\n  export let name;\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  ul {\n\t  text-decoration: none;\n\t  list-style: none;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n  <h1>Hello {name}!</h1>\n  {#await $cursosList}\n    <li>Cargando...</li>\n  {:then result}\n    {#each result.data.cursos as curso}\n      <ul>\n        <li>\n          <div>{curso.nombre}</div>\n          <div>{curso.descripcion}</div>\n        </li>\n      </ul>\n    {/each}\n  {:catch error}\n    <li>Error loading authors: {error}</li>\n  {/await}\n</main>\n"
  ],
  "names": [],
  "mappings": "AAsDE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,EAAE,eAAC,CAAC,AACH,eAAe,CAAE,IAAI,CACrB,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC"
}